

Test Driven Development

1. Conceptualisation - Brainstom the ideas of what problem you are trying to solve with your code
    a. What API archechiture do you need?
    b. How long will it take
    c. What resources and platforms do you need - DB? MongoDb, Redis, PostgreSQL
    d. What endpoints do we need, which possibly need to protected 
    e. Admin levels? super user, base user etc
    f. do we websockets or https endponts, do we need both?
    g. what auth strategy are we using, session or jwt? 

    JWT --> Encryption Type -  HMAC (Dont user), AED, SHA256 - Better Speed, Simpler Logic - Tradeoffs - High Security Vunerabilities
    Session -> Session ID authentication - Better Security, Tradeoffs - Slower Speeds, Scalability issues 
    (Storage, Throughput (Number of transaction that can be handle per s or ms))

2. Documentation First approach - After conceptualisation we write the docs for the projects API
    a. Use Notion for Docs


3. Write your tests to validate your concepts 
 -- Testing signup, signin mechanism etc


4. Start build the api based on tests you have written



BUILDING APIs

Naming Conventions

baseurl/v1

Users Endpoint: baseurl/v1/users/:id (v1.0.0)

Semantic Version:
1 = Breaking change - API Change - Data return could be different, endpoints deprecated, function change or removals
0 = Minor Updates - Feature Additions, Fast response times, more useable features  (Non-breaking changes)
0 = Patch Updates - Fix errors in the code that have picked on during code reviews (Non-breaking changes) - GitHub
Admin Endpoint: baseurl/v1/Admin

Signup: baseurl/v1/signup 

Signin: baseurl/v1/signin

alternative 
baseurl/api/v1

